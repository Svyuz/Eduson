1) Какое количество менторов и менти взаимодействуют каждый месяц на нашей платформе? 
Как меняется этот показатель из месяца в месяц?

1. Проверим таблицу users (возможные роли)
SELECT DISTINCT role FROM users;

2. Посмотрим структуру sessions/weekly_sessions:
SELECT column_name, data_type 
FROM information_schema.columns 
WHERE table_name IN ('sessions', 'weekly_sessions');

3. Запрос для анализа взаимодействий менторов и менти по месяцам:
SELECT 
    EXTRACT(YEAR FROM session_date_time) AS year,
    EXTRACT(MONTH FROM session_date_time) AS month,
    COUNT(DISTINCT mentor_id) AS unique_mentors,
    COUNT(DISTINCT mentee_id) AS unique_mentees,
    COUNT(*) AS total_sessions
FROM sessions
WHERE session_status = 'finished'
GROUP BY 
    EXTRACT(YEAR FROM session_date_time),
    EXTRACT(MONTH FROM session_date_time)
ORDER BY year, month;

4. Расчета процентного роста:
WITH monthly_data AS (
    SELECT 
        EXTRACT(YEAR FROM session_date_time) AS year,
        EXTRACT(MONTH FROM session_date_time) AS month,
        COUNT(DISTINCT mentor_id) AS mentors,
        COUNT(DISTINCT mentee_id) AS mentees
    FROM sessions
    WHERE session_status = 'finished'
    GROUP BY 
        EXTRACT(YEAR FROM session_date_time),
        EXTRACT(MONTH FROM session_date_time)
)
SELECT 
    year,
    month,
    mentors,
    mentees,
    mentors - LAG(mentors) OVER (ORDER BY year, month) AS mentor_change,
    mentees - LAG(mentees) OVER (ORDER BY year, month) AS mentee_change,
    CASE 
        WHEN LAG(mentors) OVER (ORDER BY year, month) > 0 
        THEN ROUND((mentors - LAG(mentors) OVER (ORDER BY year, month)) * 100.0 / 
            LAG(mentors) OVER (ORDER BY year, month), 2)
        ELSE NULL
    END AS mentor_growth_percent,
    CASE 
        WHEN LAG(mentees) OVER (ORDER BY year, month) > 0 
        THEN ROUND((mentees - LAG(mentees) OVER (ORDER BY year, month)) * 100.0 / 
            LAG(mentees) OVER (ORDER BY year, month), 2)
        ELSE NULL
    END AS mentee_growth_percent
FROM monthly_data
ORDER BY year, month;

5. Объединение месяца и года в одной колонке:
WITH monthly_data AS (
    SELECT 
        EXTRACT(YEAR FROM session_date_time) AS year,
        EXTRACT(MONTH FROM session_date_time) AS month,
        COUNT(DISTINCT mentor_id) AS mentors,
        COUNT(DISTINCT mentee_id) AS mentees,
        COUNT(*) AS total_sessions
    FROM sessions
    WHERE session_status = 'finished'
    GROUP BY 
        EXTRACT(YEAR FROM session_date_time),
        EXTRACT(MONTH FROM session_date_time)
)
SELECT 
    year || '-' || LPAD(month::text, 2, '0') AS year_month,
    mentors,
    mentees,
    total_sessions,
    mentors - LAG(mentors) OVER (ORDER BY year, month) AS mentor_change,
    mentees - LAG(mentees) OVER (ORDER BY year, month) AS mentee_change,
    CASE 
        WHEN LAG(mentors) OVER (ORDER BY year, month) > 0 
        THEN ROUND((mentors - LAG(mentors) OVER (ORDER BY year, month)) * 100.0 / 
            LAG(mentors) OVER (ORDER BY year, month), 2)
        ELSE NULL
    END AS mentor_growth_percent,
    CASE 
        WHEN LAG(mentees) OVER (ORDER BY year, month) > 0 
        THEN ROUND((mentees - LAG(mentees) OVER (ORDER BY year, month)) * 100.0 / 
            LAG(mentees) OVER (ORDER BY year, month), 2)
        ELSE NULL
    END AS mentee_growth_percent,
    ROUND(mentees * 1.0 / NULLIF(mentors, 0), 2) AS mentees_per_mentor
FROM monthly_data
ORDER BY year, month

2) Сколько на платформе менторов и менти, которые  еще не приняли участие ни в одной встрече?
1. Кол-во неактивных менти:
SELECT 
    'Неактивные менти' AS user_type,
    COUNT(*) AS count
FROM 
    users
WHERE 
    role = 'mentee'
    AND user_id NOT IN (
        SELECT DISTINCT mentee_id 
        FROM sessions
    )

2. Кол-во неактивных менторов:
SELECT 
    'Неактивные менторы' AS user_type,
    COUNT(*) AS count
FROM 
    users
WHERE 
    role = 'mentor'
    AND user_id NOT IN (
        SELECT DISTINCT mentor_id 
        FROM sessions
    )

3) Сколько у каждого ментора в среднем успешных сессий в неделю   по месяцам?

1. Проверка базового запроса для weekly_stats:
SELECT
    mentor_id,
    DATE_TRUNC('week', session_date_time) AS week_start,
    COUNT(*) AS sessions_count
FROM sessions
WHERE session_status = 'finished'
GROUP BY mentor_id, DATE_TRUNC('week', session_date_time);

2. Месячная агрегация:
WITH weekly_stats AS (
    SELECT
        mentor_id,
        DATE_TRUNC('week', session_date_time) AS week_start,
        COUNT(*) AS sessions_count
    FROM sessions
    WHERE session_status = 'finished'
    GROUP BY mentor_id, DATE_TRUNC('week', session_date_time)
)
SELECT
    mentor_id,
    DATE_TRUNC('month', week_start) AS month_start,
    AVG(sessions_count) AS avg_sessions_per_week
FROM weekly_stats
GROUP BY mentor_id, DATE_TRUNC('month', week_start);

3. Группировка по месяцам:
WITH weekly_stats AS (
    SELECT
        mentor_id,
        DATE_TRUNC('week', session_date_time) AS week_start,
        COUNT(*) AS sessions_count
    FROM sessions
    WHERE session_status = 'finished'
    GROUP BY mentor_id, DATE_TRUNC('week', session_date_time)
),
monthly_stats AS (
    SELECT
        mentor_id,
        DATE_TRUNC('month', week_start) AS month_start,
        AVG(sessions_count) AS avg_sessions_per_week
    FROM weekly_stats
    GROUP BY mentor_id, DATE_TRUNC('month', week_start)
)
SELECT
    TO_CHAR(month_start, 'YYYY-MM') AS month,
    COUNT(mentor_id) AS active_mentors,
    ROUND(AVG(avg_sessions_per_week), 2) AS avg_sessions_per_mentor
FROM monthly_stats
GROUP BY month_start
ORDER BY month_start

4) Определите ТОП-5 менторов с самым большим количеством сессий за последний полный месяц. Есть ли между ними что-то общее?
WITH last_month AS (
    SELECT 
        DATE_TRUNC('month', MAX(session_date_time)) AS month_start
    FROM 
        sessions
    WHERE 
        session_date_time < DATE_TRUNC('month', CURRENT_DATE)
),
top_mentors AS (
    SELECT 
        s.mentor_id,
        COUNT(*) AS sessions_count
    FROM 
        sessions s,
        last_month
    WHERE 
        DATE_TRUNC('month', s.session_date_time) = last_month.month_start
        AND s.session_status = 'finished'
    GROUP BY 
        s.mentor_id
    ORDER BY 
        sessions_count DESC
    LIMIT 5
)
SELECT 
    tm.mentor_id,
    u.role,
    tm.sessions_count,
    u.reg_date AS registration_date,
    r.name AS region_name
FROM 
    top_mentors tm
JOIN 
    users u ON tm.mentor_id = u.user_id
LEFT JOIN 
    region r ON u.region_id = r.id
ORDER BY 
    tm.sessions_count DESC
